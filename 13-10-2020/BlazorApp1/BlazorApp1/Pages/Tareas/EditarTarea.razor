@page "/Tareas/EditarTarea/{id:int}"
@using BlazorApp1.Data

@inject TareasService Tareas
@inject RecursosService Recursos
@inject DetallesService Detalles
@inject NavigationManager navigation
@inject IJSRuntime JsRuntime

<h3>Crear Tarea</h3>

<EditForm Model="@Modelo" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group row">
        <div class="form-group col-md-12">
            <label for="nombre">Titulo</label>
            <InputText @bind-Value="Modelo.titulo" />
        </div>
        <div class="form-group col-md-12">
            <label for="nombre">Vencimiento</label>
            <InputText @bind-Value="Modelo.vencimiento" />
        </div>
        <div class="form-group col-md-12">
            <label for="nombre">Estimacion</label>
            <InputText @bind-Value="Modelo.estimacion" />
        </div>
        <div class="form-group col-md-12">
            <label for="nombre">Responsable</label>
            <InputSelect @bind-Value="idrecurso">
                <option value="0">Elija un recurso</option>
                @foreach (var item in recurso)
                {
                    <option value="@item.id">@item.nombre</option>
                }
            </InputSelect>
        </div>
        <button class="btn btn-success" type="submit">Guardar</button>
    </div>
</EditForm>



    <h2 class="mt-3">Detalles</h2>
    <button class="btn btn-success mt-3" @onclick="()=>Editar(0)">Nuevo Detalle</button>
    <table class="table">
        <thead>
            <tr>
                <th>Fecha</th>
                <th>Tiempo</th>
                <th>Recurso</th>
                <th>Tarea</th>
                <th>Acciones</th>
            </tr>
        </thead>

        <tbody>

            @foreach (var item in detalle)
            {
                @if (item.Tareaid == Modelo.id)
                {
                    <tr>
                        <td>@item.Fecha</td>
                        <td>@item.Tiempo</td>
                        <td>@item.Recur.nombre</td>
                        <th>@item.Tarea.titulo </th>

                        <td><button class="btn btn-warning" @onclick="()=>Editar(item.id)">Editar</button> <button class="btn btn-danger" @onclick="()=>Borrar(item.id)">Borrar</button></td>
                    </tr>
                }
            }


        </tbody>
    </table>


@code {
    [Parameter]
    public int id { get; set; }

    public Tareas Modelo { get; set; } = new Tareas();

    public string idrecurso { get; set; }

    private List<Recursos> recurso = new List<Recursos>();

    private List<Detalles> detalle = new List<Detalles>();

    protected override async Task OnInitializedAsync()
    {
        if (id > 0)
        {
            Modelo = await Tareas.Get(id);
            idrecurso = Modelo.responsableid.ToString();
        }
        else
        {
            Modelo = new Tareas();
        }

        recurso = await Recursos.GetAll();
        detalle = await Detalles.GetAll();

    }


    private async void Guardar()
    {
        Modelo.responsableid = int.Parse(idrecurso);
        await Tareas.Save(Modelo);
        navigation.NavigateTo("Tareas/ListadoDeTareas");
    }


    protected void Editar(int id)
    {
        navigation.NavigateTo("/Detalles/EditarDetalle/" + id);
    }

    async Task Borrar(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Desea elimiar el detalle?");
        if (confirmed)
        {
            await Detalles.Remove(id);
            detalle = await Detalles.GetAll();
        }
    }


}
